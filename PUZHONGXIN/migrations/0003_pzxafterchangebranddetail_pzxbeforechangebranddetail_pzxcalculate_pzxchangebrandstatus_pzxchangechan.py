# Generated by Django 3.2 on 2023-06-08 06:17

import PUZHONGXIN.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('PUZHONGXIN', '0002_pzxspdlist'),
    ]

    operations = [
        migrations.CreateModel(
            name='PZXMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.CharField(default='普中心', max_length=255, verbose_name='客户')),
                ('department', models.CharField(blank=True, max_length=255, null=True, verbose_name='科室')),
                ('semidepartment', models.CharField(blank=True, max_length=255, null=True, verbose_name='使用科室')),
                ('code', models.CharField(blank=True, max_length=255, null=True, verbose_name='产品编码U8')),
                ('product', models.CharField(blank=True, max_length=255, null=True, verbose_name='产品名称U8')),
                ('spec', models.CharField(blank=True, max_length=255, null=True, verbose_name='规格')),
                ('unit', models.CharField(blank=True, max_length=255, null=True, verbose_name='单位')),
                ('brand', models.CharField(blank=True, max_length=255, null=True, verbose_name='品牌')),
                ('supplier', models.CharField(blank=True, max_length=255, null=True, verbose_name='供应商')),
                ('costperunit', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='采购价/单位(报价)')),
                ('machinemodel', models.CharField(blank=True, max_length=255, null=True, verbose_name='仪器型号')),
                ('machinebrand', models.CharField(blank=True, max_length=255, null=True, verbose_name='仪器品牌')),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='是否呈现')),
            ],
            options={
                'verbose_name_plural': 'SPD普中心大菜单',
                'db_table': 'marketing_research_v2"."SPDPZXMenu',
            },
        ),
        migrations.CreateModel(
            name='PZXOverall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, max_length=255, null=True, verbose_name='科室')),
                ('project', models.CharField(help_text='项目大类必填', max_length=255, verbose_name='项目大类')),
                ('suppliers', models.CharField(blank=True, max_length=255, null=True, verbose_name='涉及供应商')),
                ('whygrowth', multiselectfield.db.fields.MultiSelectField(choices=[('新开项目', '新开项目'), ('供应商重新谈判', '供应商重新谈判'), ('渠道变更', '渠道变更'), ('品牌替换', '品牌替换'), ('套餐绑定', '套餐绑定')], help_text='（增量来源可以多选, 选后请在下方填写明细）', max_length=25, verbose_name='增量来源')),
                ('progress', models.CharField(blank=True, max_length=255, null=True, verbose_name='进度')),
                ('support', models.CharField(blank=True, max_length=255, null=True, verbose_name='所需支持')),
                ('monthgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='月毛利额增量预估/元')),
                ('completemonth', models.CharField(blank=True, max_length=25, null=True, verbose_name='预计落地月份')),
                ('thisyeargpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='23年毛利额增量预估/元')),
                ('thisyeargpgrowthtotal', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='23年毛利额增量预估总计')),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='是否呈现')),
                ('company', models.ForeignKey(db_column='company', default=PUZHONGXIN.models.get_compmany_default_value, on_delete=django.db.models.deletion.CASCADE, to='PUZHONGXIN.company', verbose_name='公司')),
                ('operator', models.ForeignKey(db_column='operator', on_delete=django.db.models.deletion.CASCADE, related_name='operatorpzxoverall', to='PUZHONGXIN.pzxuserinfo', verbose_name='最后操作人')),
                ('salesman', models.ForeignKey(db_column='salesman', default=25, on_delete=django.db.models.deletion.CASCADE, related_name='salesmanpzxoverall', to='PUZHONGXIN.pzxuserinfo', verbose_name='负责人')),
            ],
            options={
                'verbose_name_plural': 'SPD作战计划',
                'db_table': 'marketing_research_v2"."SPDPlanOverall',
            },
        ),
        migrations.CreateModel(
            name='PZXSetStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whygrowth', models.CharField(default='套餐绑定', max_length=255, verbose_name='增量来源')),
                ('progress', models.CharField(choices=[('待谈判', '待谈判'), ('已谈判等回复', '已谈判等回复'), ('新价格已确认', '新价格已确认')], default='待拜访', max_length=25, verbose_name='进度(必填)')),
                ('completemonth', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], default=12, verbose_name='预计落地月份(默认12月,请修改)')),
                ('monthgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='月毛利额增量预估/元')),
                ('thisyeargpgrowth', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='23年毛利额增量预估/元')),
                ('monthgpgrowthbydetail', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='根据下方明细计算月毛利额增量')),
                ('thisyeargpgrowthbydetail', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='根据下方明细计算23年毛利额增量')),
                ('target', models.TextField(blank=True, max_length=255, null=True, verbose_name='谈判目标(文字描述,具体金额在下方明细填报)')),
                ('reason', models.TextField(blank=True, max_length=255, null=True, verbose_name='理由')),
                ('relation', models.CharField(blank=True, max_length=255, null=True, verbose_name='关系点')),
                ('support', models.CharField(blank=True, max_length=255, null=True, verbose_name='所需支持')),
                ('memo', models.TextField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('advicedirector', models.CharField(blank=True, max_length=255, null=True, verbose_name='倪日磊意见')),
                ('adviceboss', models.CharField(blank=True, max_length=255, null=True, verbose_name='陈海敏意见')),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='是否呈现')),
                ('overallid', models.ForeignKey(db_column='overallid', on_delete=django.db.models.deletion.CASCADE, to='PUZHONGXIN.pzxoverall', verbose_name='作战计划')),
            ],
            options={
                'verbose_name_plural': 'SPD套餐绑定状态',
                'db_table': 'marketing_research_v2"."SPDSetStatus',
            },
        ),
        migrations.CreateModel(
            name='PZXSetDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whygrowth', models.CharField(default='套餐绑定明细', max_length=255, verbose_name='增量来源')),
                ('originalsupplier', models.CharField(blank=True, help_text='请按系统中供应商名称填报', max_length=255, null=True, verbose_name='供应商')),
                ('originalbrand', models.CharField(blank=True, help_text='请按系统中品牌名称填报', max_length=255, null=True, verbose_name='品牌')),
                ('newsupplier', models.CharField(blank=True, max_length=255, null=True, verbose_name='新供应商 ')),
                ('beforeorafterbrandchange', models.CharField(blank=True, choices=[('置换前', '置换前'), ('置换后', '置换后')], max_length=255, null=True, verbose_name='品牌是置换前还是置换后')),
                ('code', models.CharField(blank=True, max_length=255, null=True, verbose_name='产品编码U8 ')),
                ('product', models.CharField(blank=True, help_text='请按系统名称填报', max_length=255, null=True, verbose_name='产品名称U8')),
                ('spec', models.CharField(blank=True, max_length=255, null=True, verbose_name='规格')),
                ('unit', models.CharField(blank=True, max_length=255, null=True, verbose_name='单位')),
                ('pplperunit', models.PositiveIntegerField(default=0, help_text='举例：单位是盒，规格是60T/盒，则该处填60。液体类产品请大家仔细斟酌后填报', validators=[django.core.validators.MinValueValidator(1)], verbose_name='每单位人份数(必填)')),
                ('recentsales', models.DecimalField(blank=True, decimal_places=2, help_text='半年度采购数量/单位 X 每单位人份数 X LIS收费单价 X LIS结算%', max_digits=25, null=True, verbose_name='半年度开票额 ')),
                ('recentcost', models.DecimalField(blank=True, decimal_places=2, help_text='半年度采购数量/单位 X 采购价/单位', max_digits=25, null=True, verbose_name='半年度采购额')),
                ('recentgp', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='半年度盈亏额')),
                ('recentgpofsupplier', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='半年度供应商盈利额')),
                ('lisfee', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='LIS收费价(必填)')),
                ('lispercent', models.DecimalField(decimal_places=3, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(1)], verbose_name='LIS结算比例(必填,≤1)')),
                ('lissettleprice', models.DecimalField(blank=True, decimal_places=2, help_text='开票价，LIS收费单价 X LIS结算%', max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='LIS结算价')),
                ('costperunit', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='采购价/单位(报价)')),
                ('purchaseqty', models.DecimalField(decimal_places=1, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.1)], verbose_name='半年度采购数量/单位')),
                ('costppl', models.DecimalField(blank=True, decimal_places=2, help_text='采购价每单位 / 每单位人份数', max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='采购价/人份')),
                ('gppercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='毛利率')),
                ('costfeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='原采购价占收费比例')),
                ('marketprice', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='市场价/人份(必填)')),
                ('marketpricefeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='市场价占收费比例')),
                ('newcostppl', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0)], verbose_name='新采购价/人份')),
                ('newcostdroprate', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新采购价下降比例')),
                ('newgppercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新毛利率')),
                ('newcostfeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新采购价占收费比例')),
                ('targetppl', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0)], verbose_name='谈判目标/元(必填)')),
                ('targetdropdate', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='谈判下降比例')),
                ('realmonthlyppl', models.PositiveIntegerField(default=0, verbose_name='每月lis开票人份数')),
                ('estimatemonthlyppl', models.PositiveIntegerField(default=0, verbose_name='预估每月lis开票人份数')),
                ('gpgrowthppl', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='毛利额增量/人份')),
                ('estmonthlygpgrowth', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='预估月毛利额增量')),
                ('monthgp', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='月毛利额')),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='是否呈现')),
                ('progressid', models.ForeignKey(db_column='progressid', on_delete=django.db.models.deletion.CASCADE, to='PUZHONGXIN.pzxsetstatus', verbose_name='进度状态')),
            ],
            options={
                'verbose_name_plural': 'SPD套餐绑定明细',
                'db_table': 'marketing_research_v2"."SPDSetDetail',
            },
        ),
        migrations.CreateModel(
            name='PZXNewProjectStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whygrowth', models.CharField(default='新项目', max_length=255, verbose_name='增量来源')),
                ('progress', models.CharField(choices=[('待拜访', '待拜访'), ('初期了解中', '初期了解中'), ('有意向', '有意向'), ('申报预算', '申报预算'), ('审批中', '审批中'), ('审批通过', '审批通过'), ('待招标', '待招标'), ('招标完成', '招标完成'), ('仪器装机启用', '仪器装机启用'), ('仪器试剂均开票', '仪器试剂均开票')], default='待拜访', max_length=25, verbose_name='进度(必填)')),
                ('completemonth', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], default=12, verbose_name='预计落地月份(默认12月,请修改)')),
                ('monthgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='月毛利额增量预估/元')),
                ('thisyeargpgrowth', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='23年毛利额增量预估/元')),
                ('monthgpgrowthbydetail', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='根据下方明细计算月毛利额增量')),
                ('thisyeargpgrowthbydetail', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='根据下方明细计算23年毛利额增量')),
                ('target', models.TextField(blank=True, max_length=255, null=True, verbose_name='谈判目标(文字描述,具体金额在下方明细填报)')),
                ('reason', models.TextField(blank=True, max_length=255, null=True, verbose_name='理由')),
                ('relation', models.CharField(blank=True, max_length=255, null=True, verbose_name='关系点')),
                ('support', models.CharField(blank=True, max_length=255, null=True, verbose_name='所需支持')),
                ('memo', models.TextField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('advicedirector', models.CharField(blank=True, max_length=255, null=True, verbose_name='倪日磊意见')),
                ('adviceboss', models.CharField(blank=True, max_length=255, null=True, verbose_name='陈海敏意见')),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='是否呈现')),
                ('overallid', models.ForeignKey(db_column='overallid', on_delete=django.db.models.deletion.CASCADE, to='PUZHONGXIN.pzxoverall', verbose_name='作战计划')),
            ],
            options={
                'verbose_name_plural': 'SPD新开项目状态',
                'db_table': 'marketing_research_v2"."SPDNewProjectStatus',
            },
        ),
        migrations.CreateModel(
            name='PZXNewProjectDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whygrowth', models.CharField(default='新项目明细', max_length=255, verbose_name='增量来源')),
                ('originalsupplier', models.CharField(blank=True, help_text='请按系统中供应商名称填报', max_length=255, null=True, verbose_name='供应商')),
                ('originalbrand', models.CharField(blank=True, help_text='请按系统中品牌名称填报', max_length=255, null=True, verbose_name='品牌')),
                ('newsupplier', models.CharField(blank=True, max_length=255, null=True, verbose_name='新供应商 ')),
                ('beforeorafterbrandchange', models.CharField(blank=True, choices=[('置换前', '置换前'), ('置换后', '置换后')], max_length=255, null=True, verbose_name='品牌是置换前还是置换后')),
                ('code', models.CharField(blank=True, max_length=255, null=True, verbose_name='产品编码U8 ')),
                ('product', models.CharField(blank=True, help_text='请按系统名称填报', max_length=255, null=True, verbose_name='产品名称U8')),
                ('spec', models.CharField(blank=True, max_length=255, null=True, verbose_name='规格')),
                ('unit', models.CharField(blank=True, max_length=255, null=True, verbose_name='单位')),
                ('pplperunit', models.PositiveIntegerField(default=0, help_text='举例：单位是盒，规格是60T/盒，则该处填60。液体类产品请大家仔细斟酌后填报', validators=[django.core.validators.MinValueValidator(1)], verbose_name='每单位人份数(必填)')),
                ('recentsales', models.DecimalField(blank=True, decimal_places=2, help_text='半年度采购数量/单位 X 每单位人份数 X LIS收费单价 X LIS结算%', max_digits=25, null=True, verbose_name='半年度开票额 ')),
                ('recentcost', models.DecimalField(blank=True, decimal_places=2, help_text='半年度采购数量/单位 X 采购价/单位', max_digits=25, null=True, verbose_name='半年度采购额')),
                ('recentgp', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='半年度盈亏额')),
                ('recentgpofsupplier', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='半年度供应商盈利额')),
                ('lisfee', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='LIS收费价(必填)')),
                ('lispercent', models.DecimalField(decimal_places=3, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(1)], verbose_name='LIS结算比例(必填,≤1)')),
                ('lissettleprice', models.DecimalField(blank=True, decimal_places=2, help_text='开票价，LIS收费单价 X LIS结算%', max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='LIS结算价')),
                ('costperunit', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='采购价/单位(报价)')),
                ('purchaseqty', models.DecimalField(blank=True, decimal_places=1, max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='半年度采购数量/单位')),
                ('costppl', models.DecimalField(blank=True, decimal_places=2, help_text='采购价每单位 / 每单位人份数', max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='采购价/人份')),
                ('gppercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='毛利率')),
                ('costfeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='原采购价占收费比例')),
                ('marketprice', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='市场价/人份(必填)')),
                ('marketpricefeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='市场价占收费比例')),
                ('newcostppl', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0)], verbose_name='新采购价/人份')),
                ('newcostdroprate', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新采购价下降比例')),
                ('newgppercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新毛利率')),
                ('newcostfeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新采购价占收费比例')),
                ('targetppl', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0)], verbose_name='谈判目标/元(必填)')),
                ('targetdropdate', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='谈判下降比例')),
                ('realmonthlyppl', models.PositiveIntegerField(default=0, verbose_name='每月lis开票人份数')),
                ('estimatemonthlyppl', models.PositiveIntegerField(default=0, verbose_name='预估每月lis开票人份数(必填)')),
                ('gpgrowthppl', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='毛利额增量/人份')),
                ('estmonthlygpgrowth', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='预估月毛利额增量')),
                ('monthgp', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='月毛利额')),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='是否呈现')),
                ('progressid', models.ForeignKey(db_column='progressid', on_delete=django.db.models.deletion.CASCADE, to='PUZHONGXIN.pzxnewprojectstatus', verbose_name='进度状态')),
            ],
            options={
                'verbose_name_plural': 'SPD新开项目明细',
                'db_table': 'marketing_research_v2"."SPDNewProjectDetail',
            },
        ),
        migrations.CreateModel(
            name='PZXNegotiationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whygrowth', models.CharField(default='价格谈判', max_length=255, verbose_name='增量来源')),
                ('progress', models.CharField(choices=[('待谈判', '待谈判'), ('已谈判等回复', '已谈判等回复'), ('新价格已确认', '新价格已确认')], default='待拜访', max_length=25, verbose_name='进度(必填)')),
                ('completemonth', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], default=12, verbose_name='预计落地月份(默认12月,请修改)')),
                ('monthgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='月毛利额增量预估/元')),
                ('thisyeargpgrowth', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='23年毛利额增量预估/元')),
                ('monthgpgrowthbydetail', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='根据下方明细计算月毛利额增量')),
                ('thisyeargpgrowthbydetail', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='根据下方明细计算23年毛利额增量')),
                ('target', models.TextField(blank=True, max_length=255, null=True, verbose_name='谈判目标(文字描述,具体金额在下方明细填报)')),
                ('reason', models.TextField(blank=True, max_length=255, null=True, verbose_name='理由')),
                ('relation', models.CharField(blank=True, max_length=255, null=True, verbose_name='关系点')),
                ('support', models.CharField(blank=True, max_length=255, null=True, verbose_name='所需支持')),
                ('memo', models.TextField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('advicedirector', models.CharField(blank=True, max_length=255, null=True, verbose_name='倪日磊意见')),
                ('adviceboss', models.CharField(blank=True, max_length=255, null=True, verbose_name='陈海敏意见')),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='是否呈现')),
                ('overallid', models.ForeignKey(db_column='overallid', on_delete=django.db.models.deletion.CASCADE, to='PUZHONGXIN.pzxoverall', verbose_name='作战计划')),
            ],
            options={
                'verbose_name_plural': 'SPD供应商重新谈判状态',
                'db_table': 'marketing_research_v2"."SPDNegotiationStatus',
            },
        ),
        migrations.CreateModel(
            name='PZXNegotiationDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whygrowth', models.CharField(default='价格谈判明细', max_length=255, verbose_name='增量来源')),
                ('originalsupplier', models.CharField(blank=True, help_text='请按系统中供应商名称填报', max_length=255, null=True, verbose_name='供应商')),
                ('originalbrand', models.CharField(blank=True, help_text='请按系统中品牌名称填报', max_length=255, null=True, verbose_name='品牌')),
                ('newsupplier', models.CharField(blank=True, max_length=255, null=True, verbose_name='新供应商 ')),
                ('beforeorafterbrandchange', models.CharField(blank=True, choices=[('置换前', '置换前'), ('置换后', '置换后')], max_length=255, null=True, verbose_name='品牌是置换前还是置换后')),
                ('code', models.CharField(blank=True, max_length=255, null=True, verbose_name='产品编码U8 ')),
                ('product', models.CharField(blank=True, help_text='请按系统名称填报', max_length=255, null=True, verbose_name='产品名称U8')),
                ('spec', models.CharField(blank=True, max_length=255, null=True, verbose_name='规格')),
                ('unit', models.CharField(blank=True, max_length=255, null=True, verbose_name='单位')),
                ('pplperunit', models.PositiveIntegerField(default=0, help_text='举例：单位是盒，规格是60T/盒，则该处填60。液体类产品请大家仔细斟酌后填报', validators=[django.core.validators.MinValueValidator(1)], verbose_name='每单位人份数(必填)')),
                ('recentsales', models.DecimalField(blank=True, decimal_places=2, help_text='半年度采购数量/单位 X 每单位人份数 X LIS收费单价 X LIS结算%', max_digits=25, null=True, verbose_name='半年度开票额 ')),
                ('recentcost', models.DecimalField(blank=True, decimal_places=2, help_text='半年度采购数量/单位 X 采购价/单位', max_digits=25, null=True, verbose_name='半年度采购额')),
                ('recentgp', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='半年度盈亏额')),
                ('recentgpofsupplier', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='半年度供应商盈利额')),
                ('lisfee', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='LIS收费价(必填)')),
                ('lispercent', models.DecimalField(decimal_places=3, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(1)], verbose_name='LIS结算比例(必填,≤1)')),
                ('lissettleprice', models.DecimalField(blank=True, decimal_places=2, help_text='开票价，LIS收费单价 X LIS结算%', max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='LIS结算价')),
                ('costperunit', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='采购价/单位(报价)')),
                ('purchaseqty', models.DecimalField(decimal_places=1, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.1)], verbose_name='半年度采购数量/单位')),
                ('costppl', models.DecimalField(blank=True, decimal_places=2, help_text='采购价每单位 / 每单位人份数', max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='采购价/人份')),
                ('gppercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='毛利率')),
                ('costfeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='原采购价占收费比例')),
                ('marketprice', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='市场价/人份(必填)')),
                ('marketpricefeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='市场价占收费比例')),
                ('newcostppl', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0)], verbose_name='新采购价/人份')),
                ('newcostdroprate', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新采购价下降比例')),
                ('newgppercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新毛利率')),
                ('newcostfeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新采购价占收费比例')),
                ('targetppl', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='谈判目标/元(必填)')),
                ('targetdropdate', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='谈判下降比例')),
                ('realmonthlyppl', models.PositiveIntegerField(default=0, verbose_name='每月lis开票人份数')),
                ('estimatemonthlyppl', models.PositiveIntegerField(default=0, verbose_name='预估每月lis开票人份数')),
                ('gpgrowthppl', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='毛利额增量/人份')),
                ('estmonthlygpgrowth', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='预估月毛利额增量')),
                ('monthgp', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='月毛利额')),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='是否呈现')),
                ('productid', models.ForeignKey(blank=True, db_column='productid', null=True, on_delete=django.db.models.deletion.CASCADE, to='PUZHONGXIN.pzxmenu', verbose_name='产品信息')),
                ('progressid', models.ForeignKey(db_column='progressid', on_delete=django.db.models.deletion.CASCADE, to='PUZHONGXIN.pzxnegotiationstatus', verbose_name='进度状态')),
            ],
            options={
                'verbose_name_plural': 'SPD供应商重新谈判明细',
                'db_table': 'marketing_research_v2"."SPDNegotiationDetail',
            },
        ),
        migrations.CreateModel(
            name='PZXChangeChannelStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whygrowth', models.CharField(default='渠道变更', max_length=255, verbose_name='增量来源')),
                ('progress', models.CharField(choices=[('待谈判', '待谈判'), ('已谈判等回复', '已谈判等回复'), ('新渠道价格已确认', '新渠道价格已确认')], default='待拜访', max_length=25, verbose_name='进度(必填)')),
                ('completemonth', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], default=12, verbose_name='预计落地月份(默认12月,请修改)')),
                ('monthgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='月毛利额增量预估/元')),
                ('thisyeargpgrowth', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='23年毛利额增量预估/元')),
                ('monthgpgrowthbydetail', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='根据下方明细计算月毛利额增量')),
                ('thisyeargpgrowthbydetail', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='根据下方明细计算23年毛利额增量')),
                ('target', models.TextField(blank=True, max_length=255, null=True, verbose_name='谈判目标(文字描述,具体金额在下方明细填报)')),
                ('reason', models.TextField(blank=True, max_length=255, null=True, verbose_name='理由')),
                ('relation', models.CharField(blank=True, max_length=255, null=True, verbose_name='关系点')),
                ('support', models.CharField(blank=True, max_length=255, null=True, verbose_name='所需支持')),
                ('memo', models.TextField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('advicedirector', models.CharField(blank=True, max_length=255, null=True, verbose_name='倪日磊意见')),
                ('adviceboss', models.CharField(blank=True, max_length=255, null=True, verbose_name='陈海敏意见')),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='是否呈现')),
                ('overallid', models.ForeignKey(db_column='overallid', on_delete=django.db.models.deletion.CASCADE, to='PUZHONGXIN.pzxoverall', verbose_name='作战计划')),
            ],
            options={
                'verbose_name_plural': 'SPD渠道变更状态',
                'db_table': 'marketing_research_v2"."SPDChangeChannelStatus',
            },
        ),
        migrations.CreateModel(
            name='PZXChangeChannelDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whygrowth', models.CharField(default='渠道变更明细', max_length=255, verbose_name='增量来源')),
                ('originalsupplier', models.CharField(blank=True, help_text='请按系统中供应商名称填报', max_length=255, null=True, verbose_name='原供应商')),
                ('originalbrand', models.CharField(blank=True, help_text='请按系统中品牌名称填报', max_length=255, null=True, verbose_name='品牌')),
                ('newsupplier', models.CharField(blank=True, help_text='请按系统中供应商名称填报', max_length=255, null=True, verbose_name='新供应商 ')),
                ('beforeorafterbrandchange', models.CharField(blank=True, choices=[('置换前', '置换前'), ('置换后', '置换后')], max_length=255, null=True, verbose_name='品牌是置换前还是置换后')),
                ('code', models.CharField(blank=True, max_length=255, null=True, verbose_name='产品编码U8 ')),
                ('product', models.CharField(blank=True, help_text='请按系统名称填报', max_length=255, null=True, verbose_name='产品名称U8')),
                ('spec', models.CharField(blank=True, max_length=255, null=True, verbose_name='规格')),
                ('unit', models.CharField(blank=True, max_length=255, null=True, verbose_name='单位')),
                ('pplperunit', models.PositiveIntegerField(default=0, help_text='举例：单位是盒，规格是60T/盒，则该处填60。液体类产品请大家仔细斟酌后填报', validators=[django.core.validators.MinValueValidator(1)], verbose_name='每单位人份数(必填)')),
                ('recentsales', models.DecimalField(blank=True, decimal_places=2, help_text='半年度采购数量/单位 X 每单位人份数 X LIS收费单价 X LIS结算%', max_digits=25, null=True, verbose_name='半年度开票额 ')),
                ('recentcost', models.DecimalField(blank=True, decimal_places=2, help_text='半年度采购数量/单位 X 采购价/单位', max_digits=25, null=True, verbose_name='半年度采购额')),
                ('recentgp', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='半年度盈亏额')),
                ('recentgpofsupplier', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='半年度供应商盈利额')),
                ('lisfee', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='LIS收费价(必填)')),
                ('lispercent', models.DecimalField(decimal_places=3, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(1)], verbose_name='LIS结算比例(必填,≤1)')),
                ('lissettleprice', models.DecimalField(blank=True, decimal_places=2, help_text='开票价，LIS收费单价 X LIS结算%', max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='LIS结算价')),
                ('costperunit', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='原供应商采购价/单位')),
                ('purchaseqty', models.DecimalField(decimal_places=1, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.1)], verbose_name='半年度采购数量/单位')),
                ('costppl', models.DecimalField(blank=True, decimal_places=2, help_text='采购价每单位 / 每单位人份数', max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='采购价/人份')),
                ('gppercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='毛利率')),
                ('costfeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='原采购价占收费比例')),
                ('marketprice', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='市场价/人份(必填)')),
                ('marketpricefeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='市场价占收费比例')),
                ('newcostppl', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0)], verbose_name='新供应商采购价/人份')),
                ('newcostdroprate', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新采购价下降比例')),
                ('newgppercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新毛利率')),
                ('newcostfeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新采购价占收费比例')),
                ('targetppl', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0)], verbose_name='与新供应商谈判目标/元(必填)')),
                ('targetdropdate', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='谈判下降比例')),
                ('realmonthlyppl', models.PositiveIntegerField(default=0, verbose_name='每月lis开票人份数')),
                ('estimatemonthlyppl', models.PositiveIntegerField(default=0, verbose_name='预估每月lis开票人份数')),
                ('gpgrowthppl', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='毛利额增量/人份')),
                ('estmonthlygpgrowth', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='预估月毛利额增量')),
                ('monthgp', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='月毛利额')),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='是否呈现')),
                ('progressid', models.ForeignKey(db_column='progressid', on_delete=django.db.models.deletion.CASCADE, to='PUZHONGXIN.pzxchangechannelstatus', verbose_name='进度状态')),
            ],
            options={
                'verbose_name_plural': 'SPD渠道变更明细',
                'db_table': 'marketing_research_v2"."SPDChangeChannelDetail',
            },
        ),
        migrations.CreateModel(
            name='PZXChangeBrandStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whygrowth', models.CharField(default='品牌替换', max_length=255, verbose_name='增量来源')),
                ('progress', models.CharField(choices=[('待谈判', '待谈判'), ('已谈判等回复', '已谈判等回复'), ('新价格已确认', '新价格已确认')], default='待拜访', max_length=25, verbose_name='进度(必填)')),
                ('completemonth', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], default=12, verbose_name='预计落地月份(默认12月,请修改)')),
                ('monthgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='月毛利额增量预估/元')),
                ('thisyeargpgrowth', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='23年毛利额增量预估/元')),
                ('monthgpgrowthbydetail', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='根据下方明细计算月毛利额增量')),
                ('thisyeargpgrowthbydetail', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='根据下方明细计算23年毛利额增量')),
                ('target', models.TextField(blank=True, max_length=255, null=True, verbose_name='谈判目标(文字描述,具体金额在下方明细填报)')),
                ('reason', models.TextField(blank=True, max_length=255, null=True, verbose_name='理由')),
                ('relation', models.CharField(blank=True, max_length=255, null=True, verbose_name='关系点')),
                ('support', models.CharField(blank=True, max_length=255, null=True, verbose_name='所需支持')),
                ('memo', models.TextField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('advicedirector', models.CharField(blank=True, max_length=255, null=True, verbose_name='倪日磊意见')),
                ('adviceboss', models.CharField(blank=True, max_length=255, null=True, verbose_name='陈海敏意见')),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='是否呈现')),
                ('overallid', models.ForeignKey(db_column='overallid', on_delete=django.db.models.deletion.CASCADE, to='PUZHONGXIN.pzxoverall', verbose_name='作战计划')),
            ],
            options={
                'verbose_name_plural': 'SPD品牌替换状态',
                'db_table': 'marketing_research_v2"."SPDChangeBrandStatus',
            },
        ),
        migrations.CreateModel(
            name='PZXCalculate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estnewgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='新开项目：预估月毛利额增量总计')),
                ('estnegogpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='供应商重新谈判：预估月毛利额增量总计')),
                ('estchannelgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='渠道变更：预估月毛利额增量总计')),
                ('estbrandgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='品牌替换：预估月毛利额增量总计')),
                ('estsetgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='套餐绑定：预估月毛利额增量总计')),
                ('estallgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='所有业务：预估月毛利额增量')),
                ('realnewgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='新开项目：实际月毛利额增量总计')),
                ('newgpgrowthpercent', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='新开项目：毛利额增量完成率')),
                ('realnegogpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='供应商重新谈判：实际月毛利额增量总计')),
                ('negogpgrowthpercent', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='供应商重新谈判：毛利额增量完成率')),
                ('realchannelgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='渠道变更：实际月毛利额增量总计')),
                ('channelgpgrowthpercent', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='渠道变更：毛利额增量完成率')),
                ('realbrandgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='品牌替换：实际月毛利额增量总计')),
                ('brandgpgrowthpercent', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='品牌替换：毛利额增量完成率')),
                ('realsetgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='套餐绑定：实际月毛利额增量总计')),
                ('setgpgrowthpercent', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='套餐绑定：毛利额增量完成率')),
                ('realallgpgrowth', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='所有业务：实际月毛利额增量')),
                ('allgpgrowthpercent', models.DecimalField(decimal_places=2, default=0, max_digits=25, verbose_name='所有业务：毛利额增量完成率')),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='是否呈现')),
                ('overallid', models.OneToOneField(db_column='overallid', on_delete=django.db.models.deletion.CASCADE, to='PUZHONGXIN.pzxoverall', verbose_name='作战计划')),
            ],
            options={
                'verbose_name_plural': 'SPD作战计划计算表',
                'db_table': 'marketing_research_v2"."SPDCalculate',
            },
        ),
        migrations.CreateModel(
            name='PZXBeforeChangeBrandDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whygrowth', models.CharField(default='品牌替换前', max_length=255, verbose_name='增量来源')),
                ('originalsupplier', models.CharField(blank=True, help_text='请按系统中供应商名称填报', max_length=255, null=True, verbose_name='供应商')),
                ('originalbrand', models.CharField(blank=True, help_text='请按系统中品牌名称填报', max_length=255, null=True, verbose_name='品牌')),
                ('newsupplier', models.CharField(blank=True, max_length=255, null=True, verbose_name='新供应商 ')),
                ('beforeorafterbrandchange', models.CharField(choices=[('置换前', '置换前'), ('置换后', '置换后')], default='置换前', max_length=255, verbose_name='品牌是置换前还是置换后')),
                ('code', models.CharField(blank=True, max_length=255, null=True, verbose_name='产品编码U8 ')),
                ('product', models.CharField(blank=True, help_text='请按系统名称填报', max_length=255, null=True, verbose_name='产品名称U8')),
                ('spec', models.CharField(blank=True, max_length=255, null=True, verbose_name='规格')),
                ('unit', models.CharField(blank=True, max_length=255, null=True, verbose_name='单位')),
                ('pplperunit', models.PositiveIntegerField(default=0, help_text='举例：单位是盒，规格是60T/盒，则该处填60。液体类产品请大家仔细斟酌后填报', validators=[django.core.validators.MinValueValidator(1)], verbose_name='每单位人份数(必填)')),
                ('recentsales', models.DecimalField(blank=True, decimal_places=2, help_text='半年度采购数量/单位 X 每单位人份数 X LIS收费单价 X LIS结算%', max_digits=25, null=True, verbose_name='半年度开票额 ')),
                ('recentcost', models.DecimalField(blank=True, decimal_places=2, help_text='半年度采购数量/单位 X 采购价/单位', max_digits=25, null=True, verbose_name='半年度采购额')),
                ('recentgp', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='半年度盈亏额')),
                ('recentgpofsupplier', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='半年度供应商盈利额')),
                ('lisfee', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='LIS收费价(必填)')),
                ('lispercent', models.DecimalField(decimal_places=3, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(1)], verbose_name='LIS结算比例(必填,≤1)')),
                ('lissettleprice', models.DecimalField(blank=True, decimal_places=2, help_text='开票价，LIS收费单价 X LIS结算%', max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='LIS结算价')),
                ('costperunit', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='采购价/单位(报价)')),
                ('purchaseqty', models.DecimalField(decimal_places=1, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.1)], verbose_name='半年度采购数量/单位')),
                ('costppl', models.DecimalField(blank=True, decimal_places=2, help_text='采购价每单位 / 每单位人份数', max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='采购价/人份')),
                ('gppercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='毛利率')),
                ('costfeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='原采购价占收费比例')),
                ('marketprice', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='市场价/人份(必填)')),
                ('marketpricefeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='市场价占收费比例')),
                ('newcostppl', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0)], verbose_name='新采购价/人份')),
                ('newcostdroprate', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新采购价下降比例')),
                ('newgppercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新毛利率')),
                ('newcostfeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新采购价占收费比例')),
                ('targetppl', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0)], verbose_name='谈判目标/元(必填)')),
                ('targetdropdate', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='谈判下降比例')),
                ('realmonthlyppl', models.PositiveIntegerField(default=0, verbose_name='每月lis开票人份数')),
                ('estimatemonthlyppl', models.PositiveIntegerField(default=0, verbose_name='预估每月lis开票人份数')),
                ('gpgrowthppl', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='毛利额增量/人份')),
                ('estmonthlygpgrowth', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='预估月毛利额增量')),
                ('monthgp', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='月毛利额')),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='是否呈现')),
                ('progressid', models.ForeignKey(db_column='progressid', on_delete=django.db.models.deletion.CASCADE, to='PUZHONGXIN.pzxchangebrandstatus', verbose_name='进度状态')),
            ],
            options={
                'verbose_name_plural': 'SPD品牌替换前明细',
                'db_table': 'marketing_research_v2"."SPDBeforeChangeBrandDetail',
            },
        ),
        migrations.CreateModel(
            name='PZXAfterChangeBrandDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whygrowth', models.CharField(default='品牌替换后', max_length=255, verbose_name='增量来源')),
                ('originalsupplier', models.CharField(blank=True, help_text='请按系统中供应商名称填报', max_length=255, null=True, verbose_name='供应商')),
                ('originalbrand', models.CharField(blank=True, help_text='请按系统中品牌名称填报', max_length=255, null=True, verbose_name='品牌')),
                ('newsupplier', models.CharField(blank=True, max_length=255, null=True, verbose_name='新供应商 ')),
                ('beforeorafterbrandchange', models.CharField(choices=[('置换前', '置换前'), ('置换后', '置换后')], default='置换后', max_length=255, verbose_name='品牌是置换前还是置换后')),
                ('code', models.CharField(blank=True, max_length=255, null=True, verbose_name='产品编码U8 ')),
                ('product', models.CharField(blank=True, help_text='请按系统名称填报', max_length=255, null=True, verbose_name='产品名称U8')),
                ('spec', models.CharField(blank=True, max_length=255, null=True, verbose_name='规格')),
                ('unit', models.CharField(blank=True, max_length=255, null=True, verbose_name='单位')),
                ('pplperunit', models.PositiveIntegerField(default=0, help_text='举例：单位是盒，规格是60T/盒，则该处填60。液体类产品请大家仔细斟酌后填报', validators=[django.core.validators.MinValueValidator(1)], verbose_name='每单位人份数(必填)')),
                ('recentsales', models.DecimalField(blank=True, decimal_places=2, help_text='半年度采购数量/单位 X 每单位人份数 X LIS收费单价 X LIS结算%', max_digits=25, null=True, verbose_name='半年度开票额 ')),
                ('recentcost', models.DecimalField(blank=True, decimal_places=2, help_text='半年度采购数量/单位 X 采购价/单位', max_digits=25, null=True, verbose_name='半年度采购额')),
                ('recentgp', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='半年度盈亏额')),
                ('recentgpofsupplier', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='半年度供应商盈利额')),
                ('lisfee', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='LIS收费价(必填)')),
                ('lispercent', models.DecimalField(decimal_places=3, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(1)], verbose_name='LIS结算比例(必填,≤1)')),
                ('lissettleprice', models.DecimalField(blank=True, decimal_places=2, help_text='开票价，LIS收费单价 X LIS结算%', max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='LIS结算价')),
                ('costperunit', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='采购价/单位(报价)')),
                ('purchaseqty', models.DecimalField(decimal_places=1, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0.1)], verbose_name='半年度采购数量/单位')),
                ('costppl', models.DecimalField(blank=True, decimal_places=2, help_text='采购价每单位 / 每单位人份数', max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='采购价/人份')),
                ('gppercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='毛利率')),
                ('costfeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='原采购价占收费比例')),
                ('marketprice', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=25, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='市场价/人份(必填)')),
                ('marketpricefeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='市场价占收费比例')),
                ('newcostppl', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0)], verbose_name='新采购价/人份')),
                ('newcostdroprate', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新采购价下降比例')),
                ('newgppercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新毛利率')),
                ('newcostfeepercent', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='新采购价占收费比例')),
                ('targetppl', models.DecimalField(decimal_places=2, default=0, max_digits=25, validators=[django.core.validators.MinValueValidator(0)], verbose_name='谈判目标/元(必填)')),
                ('targetdropdate', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='谈判下降比例')),
                ('realmonthlyppl', models.PositiveIntegerField(default=0, verbose_name='每月lis开票人份数')),
                ('estimatemonthlyppl', models.PositiveIntegerField(default=0, verbose_name='预估每月lis开票人份数')),
                ('gpgrowthppl', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='毛利额增量/人份')),
                ('estmonthlygpgrowth', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='预估月毛利额增量')),
                ('monthgp', models.DecimalField(blank=True, decimal_places=2, max_digits=25, null=True, verbose_name='月毛利额')),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('updatetime', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='是否呈现')),
                ('progressid', models.ForeignKey(db_column='progressid', on_delete=django.db.models.deletion.CASCADE, to='PUZHONGXIN.pzxchangebrandstatus', verbose_name='进度状态')),
            ],
            options={
                'verbose_name_plural': 'SPD品牌替换后明细',
                'db_table': 'marketing_research_v2"."SPDAfterChangeBrandDetail',
            },
        ),
    ]
